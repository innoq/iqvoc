Iqvoc.default_rdf_namespace_helper_methods.each do |meth|
  document.namespaces(self.send(meth))
end

# The following code doesn't have much to do with MVC programming. Due to the
# fact you can't render a view from a controller multiple times we had to
# move the logic to the view.

offset = 0
while true
  collections = Iqvoc::Collection.base_class.order("id").limit(100).offset(offset)
  break if collections.size == 0

  # Todo: Preloading???
  collections.each do |collection|
    render_collection(document, collection)
  end

  offset += collections.size # Size is important!
end

offset = 0
while true
  concepts = Iqvoc::Concept.base_class.published.order("id").limit(100).offset(offset)
  break if concepts.size == 0

  # When in single query mode, AR handles ALL includes to be loaded by that
  # one query. We don't want that! So let's do it manually :-)
  ActiveRecord::Associations::Preloader.new(concepts,
    Iqvoc::Concept.base_class.default_includes + [
      :matches,
      :collection_members,
      :notations,
      {:relations => :target, :labelings => :target, :notes => :annotations}
    ]).run

  concepts.each do |concept|
    render_concept(document, concept, true)
  end

  offset += concepts.size # Size is important!
end
