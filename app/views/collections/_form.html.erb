<%-
# XXX: largely duplicates app/views/concepts/_base_data.html.erb
# XXX: should probably use separate config (i.e. Iqvoc:Collection)
-%>
<fieldset>
  <legend>Labelings</legend>
  <ol>
  <%- Iqvoc::Concept.labeling_classes.each do |labeling_class, languages| -%>
    <%- languages.each do |language| -%>
       <%= render labeling_class.edit_partial_name(@collection), :f => f,
                :concept => @collection, :klass => labeling_class, :language => language %>
    <%- end -%>
  <%- end -%>
  </ol>
</fieldset>

<% [ Note::SKOS::Definition ].each do |klass| %>
  <%= render :partial => klass.edit_partial_name(@collection),
          :locals => { :owner_klass => @collection, :assoc_klass => klass, :f => f } %>
<% end %>

<fieldset>
  <legend><%= Iqvoc::Concept.base_class.model_name.human(:count => 2) %></legend>
  <%= text_field_tag "concept[inline_member_concept_origins]",
          @collection.inline_member_concept_origins.join(','),
          :class => "entity_select",
          :"data-query-url" => concepts_path(:format => :json),
          :"data-entity-uri" => concept_path("{id}"),
          :"data-entities" => @collection.inline_member_concepts.
              map { |c| concept_widget_data(c) }.to_json %>
</fieldset>

<fieldset>
  <legend><%= Collection::Base.model_name.human(:count => 2) %></legend>
  <%= text_field_tag "concept[inline_member_collection_origins]",
          @collection.inline_member_collection_origins.join(','),
          :class => "entity_select",
          :"data-query-url" => collections_path(:format => :json),
          :"data-entity-uri" => collection_path("{id}"),
          :"data-exclude" => @collection.origin,
          :"data-entities" => @collection.inline_member_collections.
              map { |c| collection_widget_data(c) }.to_json %>
</fieldset>

<%= f.submit t("txt.common.save") %>

<%= content_for :widget_translations do %>
  <%= render :partial => 'layouts/widget_translations' %>
<% end %>
