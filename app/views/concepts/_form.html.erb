<%= bootstrap_form_for concept,
    :as => :concept,
    :url => concept.new_record? ? concepts_path : concept_path(:published => 0, :id => concept),
    :layout => :horizontal do |f| %>

  <!-- Base data -->
  <fieldset>
    <legend><%= t('txt.common.attributes') %></legend>
    <%= f.text_field :follow_up, :class => 'datepicker' %>
    <%= f.text_field :expired_at, :class => 'datepicker' %>

    <%- Iqvoc::Concept.additional_association_classes.keys.each do |assoc_class| -%>
      <%= render assoc_class.edit_partial_name(concept),
        :concept => concept, :klass => assoc_class, :f => f %>
    <%- end -%>
  </fieldset>
  <!-- / Base data -->

  <!-- Labelings -->
  <fieldset>
    <legend><%= Labeling::Base.model_name.human(:count => 2) %></legend>
    <% unless Iqvoc.const_defined?(:SKOSXL) %>
      <p><%= t 'txt.common.hint_csv_input' %></p>
    <% end %>
    <%- Iqvoc::Concept.labeling_classes.each do |labeling_class, languages| -%>
      <%- languages.each do |language| -%>
        <%= render labeling_class.edit_partial_name(concept), :f => f,
          :concept => concept, :klass => labeling_class, :language => language %>
      <%- end -%>
    <%- end -%>
  </fieldset>
  <!-- / Labelings -->

  <!-- Notes -->
  <% Iqvoc::Concept.note_classes.each do |note_class| %>
    <%= render note_class.edit_partial_name(concept), :owner_klass => concept, :assoc_klass => note_class, :f => f %>
  <% end %>
  <!-- / Notes -->

  <!-- Concept relations -->
  <fieldset>
    <legend><%= Concept::Relation::Base.model_name.human(:count => 2) %></legend>
    <%- if Iqvoc::Concept.broader_relation_class.narrower_editable -%>
      <%= render Iqvoc::Concept.broader_relation_class.narrower_class.edit_partial_name(concept),
        :concept => concept, :klass => Iqvoc::Concept.broader_relation_class.narrower_class, :f => f %>
    <%- end -%>

    <%= f.form_group :top_term do %>
      <%= f.check_box :top_term,
        :class => ("exclusive" if Iqvoc::Concept.broader_relation_class.singular?) %>
    <% end %>

    <%= render Iqvoc::Concept.broader_relation_class.edit_partial_name(concept),
      :concept => concept, :klass => Iqvoc::Concept.broader_relation_class, :f => f %>

    <%- Iqvoc::Concept.further_relation_classes.each do |relation_class| -%>
      <%= render relation_class.edit_partial_name(concept),
        :concept => concept, :klass => relation_class, :f => f %>
    <%- end -%>
  </fieldset>
  <!-- / Concept relations -->

  <!-- Matches -->
  <fieldset class="matches" data-datasets="<%= @datasets %>" data-remote-proxy-url="<%= alphabetical_concepts_path %>" data-translation-other="<%= t('txt.common.other') %>">
    <legend><%= Match::Base.model_name.human(:count => 2) %></legend>
    <% Iqvoc::Concept.match_classes.each do |match_class| %>
      <%= render match_class.edit_partial_name(concept), :owner_klass => concept, :assoc_klass => match_class, :f => f %>
    <% end %>
  </fieldset>
  <!-- / Matches -->

  <!-- Notations -->
  <% Iqvoc::Concept.notation_classes.each do |notation_class| %>
    <%= render notation_class.edit_partial_name(concept), :owner_klass => concept, :assoc_klass => notation_class, :f => f %>
  <% end %>
  <!-- / Notations -->

  <hr />

  <div class="well">
    <%= f.submit t("txt.common.save"), :class => "btn btn-primary" %>
  </div>

<% end %>
